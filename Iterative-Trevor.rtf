{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww14200\viewh15000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 BucHunt Iteration\
 \
The first iteration needs to be a waterfall like approach to software development with all the barebones scaffolding working together, to give us a very simplistic working project.\
1st Iteration\
 -GUI on web App that is both desktop and mobile compatible - aka cross platform.\
 -Display simple task list for a given hunt via a URL just a static web page ^^^\
 	-Simple communication between database of task list to clients\
 -Create task list data base\
 The main purpose of this iteration is just to have a static barebones webpage from a given hunt url that receives a STATIC task list for the server. All the task for the url should be persistent across devices.\
\
\
The main functionality of buchunt starts coming together in this iteration. With Actual GUI that has a purpose, more admin privileges and hunt options, also different ways of joining a hunt.\
2nd iteration\
 -user friendly GUI\
 -Server sides support for having multiple hunts \
	include multiple task lists, locations, statuses, start and end dates, and ect.\
 -different user permissions (Clients & admins)\
 -SMS/email services for sending out URLs for hunts. Possible QR code scanning support as well.\
\
 \
3rd iteration\
 -TESTING TESTING TESTING try and break our program as much as possible\
 -incorporate google/Apple Maps GPS tracking to the webpage\
 -add real world street views and images of the locations\
 -scoreboard/leaderboard system\
}